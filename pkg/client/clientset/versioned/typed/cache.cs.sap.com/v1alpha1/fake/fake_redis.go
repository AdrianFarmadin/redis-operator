/*
SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and redis-operator contributors
SPDX-License-Identifier: Apache-2.0
*/

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/sap/redis-operator/api/v1alpha1"
	cachecssapcomv1alpha1 "github.com/sap/redis-operator/pkg/client/clientset/versioned/typed/cache.cs.sap.com/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeRedis implements RedisInterface
type fakeRedis struct {
	*gentype.FakeClientWithList[*v1alpha1.Redis, *v1alpha1.RedisList]
	Fake *FakeCacheV1alpha1
}

func newFakeRedis(fake *FakeCacheV1alpha1, namespace string) cachecssapcomv1alpha1.RedisInterface {
	return &fakeRedis{
		gentype.NewFakeClientWithList[*v1alpha1.Redis, *v1alpha1.RedisList](
			fake.Fake,
			namespace,
			v1alpha1.SchemeGroupVersion.WithResource("redis"),
			v1alpha1.SchemeGroupVersion.WithKind("Redis"),
			func() *v1alpha1.Redis { return &v1alpha1.Redis{} },
			func() *v1alpha1.RedisList { return &v1alpha1.RedisList{} },
			func(dst, src *v1alpha1.RedisList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.RedisList) []*v1alpha1.Redis { return gentype.ToPointerSlice(list.Items) },
			func(list *v1alpha1.RedisList, items []*v1alpha1.Redis) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
